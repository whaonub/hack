{"version":3,"sources":["../webpack/universalModuleDefinition","../webpack/bootstrap dfd8eb6a0ff96cb4b774","config/WebIMConfig.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC7DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"static/js/WebIMConfig.b45a7861.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebIMConfig\"] = factory();\n\telse\n\t\troot[\"WebIMConfig\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 732);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dfd8eb6a0ff96cb4b774","/**\r\n * git do not control webim.config.js\r\n * everyone should copy webim.config.js.demo to webim.config.js\r\n * and have their own configs.\r\n * In this way , others won't be influenced by this config while git pull.\r\n *\r\n */\r\n\r\n// for react native\r\nvar location = {\r\n    protocol: \"https\"\r\n}\r\n\r\nvar config = {\r\n    /*\r\n     * XMPP server\r\n     */\r\n    xmppURL: \"im-api.easemob.com\",\r\n    // xmppURL: '172.17.2.139:5280',\r\n    /*\r\n     * Backend REST API URL\r\n     */\r\n    // apiURL: (location.protocol === 'https:' ? 'https:' : 'http:') + '//a1.easemob.com',\r\n    // ios must be https!!! by lwz\r\n    apiURL: \"https://a1.easemob.com\",\r\n    // apiURL: (location.protocol === 'https:' ? 'https:' : 'http:') + '//172.17.3.155:8080',\r\n    /*\r\n     * Application AppKey\r\n     */\r\n    appkey: \"1145180424177146#xnxz\",\r\n    /*\r\n     * Whether to use HTTPS\r\n     * @parameter {Boolean} true or false\r\n     */\r\n    https: true,\r\n    /*\r\n     * isMultiLoginSessions\r\n     * true: A visitor can sign in to multiple webpages and receive messages at all the webpages.\r\n     * false: A visitor can sign in to only one webpage and receive messages at the webpage.\r\n     */\r\n    isMultiLoginSessions: false,\r\n    /**\r\n     * Whether to use window.doQuery()\r\n     * @parameter {Boolean} true or false\r\n     */\r\n    isWindowSDK: false,\r\n    /**\r\n     * isSandBox=true:  xmppURL: 'im-api.sandbox.easemob.com',  apiURL: '//a1.sdb.easemob.com',\r\n     * isSandBox=false: xmppURL: 'im-api.easemob.com',          apiURL: '//a1.easemob.com',\r\n     * @parameter {Boolean} true or false\r\n     */\r\n    isSandBox: false,\r\n    /**\r\n     * Whether to console.log in strophe.log()\r\n     * @parameter {Boolean} true or false\r\n     */\r\n    isDebug: false,\r\n    /**\r\n     * Whether to show logs in strophe\r\n     * @parameter {Boolean} true or false\r\n     */\r\n    isStropheLog: false,\r\n    /**\r\n     * will auto connect the xmpp server autoReconnectNumMax times in background when client is offline.\r\n     * won't auto connect if autoReconnectNumMax=0.\r\n     */\r\n    autoReconnectNumMax: 2,\r\n    /**\r\n     * the interval secons between each atuo reconnectting.\r\n     * works only if autoReconnectMaxNum >= 2.\r\n     */\r\n    autoReconnectInterval: 2,\r\n    /**\r\n     * webrtc supports WebKit and https only\r\n     */\r\n    isWebRTC: /WebKit/.test(navigator.userAgent) && /^https\\:$/.test(window.location.protocol),\r\n    /**\r\n     *  cn: chinese\r\n     *  us: english\r\n     */\r\n    i18n: \"cn\",\r\n    /*\r\n     * Set to auto sign-in\r\n     */\r\n    isAutoLogin: true,\r\n    /**\r\n     * Size of message cache for person to person\r\n     */\r\n    p2pMessageCacheSize: 500,\r\n    /**\r\n     * When a message arrived, the receiver send an ack message to the\r\n     * sender, in order to tell the sender the message has delivered.\r\n     * See call back function onReceivedMessage\r\n     */\r\n    delivery: true,\r\n    /**\r\n     * Size of message cache for group chating like group, chatroom etc\r\n     */\r\n    groupMessageCacheSize: 200,\r\n    /**\r\n     * 5 actual logging methods, ordered and available:\r\n     * 'TRACE', 'DEBUG', 'INFO', 'WARN', 'ERROR'\r\n     */\r\n\r\n    loglevel: \"ERROR\",\r\n\r\n    /**\r\n     * enable localstorage for history messages\r\n     */\r\n    enableLocalStorage: true\r\n}\r\n\r\nexport default config\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config/WebIMConfig.js\n// module id = 732\n// module chunks = 1"],"sourceRoot":""}